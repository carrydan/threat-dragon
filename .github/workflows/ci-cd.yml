name: CI/CD Pipeline

on:
  push:
    branches: [ main, my-diplom ]
  pull_request:
    branches: [ main, my-diplom ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Шаг 1: Клонирование кода из репозитория
      - uses: actions/checkout@v3

      # Шаг 2: Установка версии Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Шаг 3: Установка зависимостей для фронтенда
      - name: Install frontend dependencies
        run: npm install
        working-directory: td.vue

      # Шаг 4: Запуск тестов фронтенда
      - name: Run frontend tests
        run: npm test
        working-directory: td.vue

      # Шаг 5: Сборка фронтенда
      - name: Build frontend
        run: npm run build
        working-directory: td.vue

      # Шаг 6: Установка зависимостей для бэкенда
      - name: Install backend dependencies
        run: npm install
        working-directory: td.server

      # Шаг 7: Запуск тестов бэкенда
      - name: Run backend tests
        run: npm test
        working-directory: td.server

      # Шаг 8: Сборка бэкенда
      - name: Build backend
        run: npm run build
        working-directory: td.server

      # Шаг 9: Логин в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Шаг 10: Сборка Docker-образа
      - name: Build Docker image
        run: docker build -t carrydan/threat-dragon:${{ github.sha }} .

      # Шаг 11: Публикация Docker-образа
      - name: Push Docker image
        run: docker push carrydan/threat-dragon:${{ github.sha }}

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build

    steps:
      # Шаг 1: Клонирование кода из репозитория
      - uses: actions/checkout@v3

      # Шаг 2: Установка Kubernetes CLI (kubectl)
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          kubectl-version: 'latest'

      # Шаг 3: Настройка доступа к Kubernetes
      - name: Configure Kubernetes
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config

      # Шаг 4: Обновление образа в Kubernetes
      - name: Deploy application to Kubernetes
        run: |
          kubectl set image deployment/threat-dragon threat-dragon=carrydan/threat-dragon:${{ github.sha }}
